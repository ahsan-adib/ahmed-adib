remove(cur_images, images, masks, panel, panel.kept, spe, img_ids, plot1, sample_id)
demo()
help()
mean()
?mean
library(ggplot2)
library(tidyverse)
datasets::iris
colnames(datasets::iris)
count(rownames(datasets::iris))
count(rownames(dacoltasets::iris))
colnames(datasets::iris)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
colnames(palmerpenguins)
?palmerpenguins
glimpse(penguins)
head(penguins)
install.packages("taylor")
library(taylor)
?taylor
data_base <- read.csv(file = "data/taylorswift.csv",
header = TRUE,
sep = ",",
stringsAsFactors = TRUE)
library(tidyverse)
data <- read_csv(file = "data/taylorswift.csv",
col_names = TRUE)
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z = c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
c(1,2,3,4) + c(0, 10, 100)
z*2+1000
my_div
remove.packages(swirl)
remove.packages(swirl)
remove.packages("swirl")
library(swirl)
.libPaths(swirl)
.libPaths("swirl")
installed.packages()
system.file(package = "swirl")
.libPaths()
find.package("swirl")
find.package("swirl")
library(swirl)
install.packages("swirl")
setwd("~/GitHub/ahmed-adib")
datasets::Titanic
colnames(Titanic)
head(Titanic)
Titanic
titanic = Titanic
titanic
tooth = datasets::ToothGrowth
tooth
tibble(tooth)
library(tidyverse)
tibble(tooth)
install.package("tidytuesday")
install.packages("tidytuesday")
install.packages("tidytuesdayR")
library(tidytuesdayR)
himalayan.data = tidytuesdayR::tt_load(2025, week 3)
himalayan.data = tidytuesdayR::tt_load(2025, week = 3)
exped.data = himalayan.data$exped_tidy
peak.data = himalayan.data$peaks_tidy
View(exped.data)
View(himalayan.data)
head(exped.data)
colnames(exped.data)
exped.data$ASCENT1
unique(exped.data$SMTDAYS)
exped.data$SMTDAYS
exped.data$TOTDAYS
exped.data$SKI
exped.data$PARAPENTE
unique(exped.data$COUNTRIES)
View(exped.data)
exped.data$ACCIDENTS
exped.data$MDEATHS
unique(exped.data$PEAKID)
count(exped.data$PEAKID == "EVER")
?count()
library(tidyverse)
count(exped.data$PEAKID == "EVER")
sum(exped.data$PEAKID == "EVER")
View(peak.data)
