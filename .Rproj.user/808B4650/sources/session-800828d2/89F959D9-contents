install.packages("tidytuesdayR")
library(tidytuesdayR)
library(tidyverse)

himalayan.data = tidytuesdayR::tt_load(2025, week = 3)

exped.data = himalayan.data$exped_tidy
peak.data = himalayan.data$peaks_tidy

head(exped.data)
colnames(exped.data)

unique(exped.data$SMTDAYS)


##Questions

### 1. What is the most successful route for the expedition  for 8k peaks?

##### extract the names of the 8k peaks
peak_8k_names = peak.data |> filter(HEIGHTM >= 8000) |> pull(PEAKID)

##### extract the expedition details of these 8k peaks
exped.8k = exped.data |> filter(PEAKID %in% peak_8k_names)

exped.8k |> pivot_longer(cols = c(SUCCESS1, SUCCESS2, SUCCESS3, SUCCESS4),
                           names_to = "route_success",
                           values_to = "success") |>
  group_by(route_success) |>
  summarise(success_rate = (mean(success, na.rm = TRUE))*100) |>
  ggplot(aes(x = route_success, y = success_rate, fill = route_success)) +
  geom_col(width = 0.6, color = "black") +
  labs(
    title = "Success rate by route",
    x = "Route (1-4)",
    y = "Success rate (%)"
  )


### 3. Which countries has lead the most successful expedition?

exped.data |> filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |>
  count(NATION, sort = TRUE) |>
  ggplot(aes(x = reorder(NATION, n), y = n)) +
  geom_col(fill = "steelblue") +
  geom_text(aes(label = n), hjust = -0.1, size = 3) +
  labs(
    title = "Successful expedition by nation",
    x = "Nation",
    y = "Number of successful expedition"
    ) +
  coord_flip()

##### what about the 8k peaks
exped.8k |> filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |>
  count(NATION, sort = TRUE) |>
  ggplot(aes(x = reorder(NATION, n), y = n)) +
  geom_col(fill = "orangered4") +
  geom_text(aes(label = n), hjust = -0.1, size = 3) +
  labs(
    title = "Successful expedition by nation on 8k peaks",
    x = "Nation",
    y = "Number of successful expedition"
  ) +
  coord_flip()

##### what about the one we actually care about (Everest)?
exped.8k |> filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |>
  filter(PEAKID == "EVER") |>
  count(NATION, sort = TRUE) |>
  ggplot(aes(x = reorder(NATION, n), y = n)) +
  geom_col(fill = "lightsalmon3") +
  geom_text(aes(label = n), hjust = -0.1, size = 3) +
  labs(
    title = "Successful expedition by nation on Everest",
    x = "Nation",
    y = "Number of successful expedition"
  ) +
  coord_flip()


### 4.	How does the travel time vary in different seasons?

exped.data |> filter(!is.na(TOTDAYS), !is.na(SEASON_FACTOR)) |>
  ggplot(aes(x = SEASON_FACTOR, y = TOTDAYS, fill = SEASON_FACTOR)) +
  geom_jitter(aes(colour = SEASON_FACTOR)) +
  scale_color_viridis_d(alpha = 1) +
  labs(
    title = "Expedition duration by season",
    x = "Season",
    y = "Total days of expedition"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

### 5. Most common reasons for expedition termination

exped.data |> count(TERMREASON_FACTOR, sort=TRUE) |>
  ggplot(aes(x = reorder(TERMREASON_FACTOR,n), y = n, fill = n)) +
  geom_col() + geom_text(aes(label = n, hjust = -0.5)) +
  coord_flip() +
  labs(
    title = "Common reasons for expedition termination",
    x = "Number",
    y = "Reasons"
  )

### 6. Which peak has the highest fatality rate?

exped.data |> left_join(select(peak.data, PEAKID, PKNAME), by = "PEAKID") |>
  group_by(PKNAME) |>
  summarise(
    expeditions = n(),
    total.deaths = sum(MDEATHS+HDEATHS),
    fatality.rate = total.deaths / expeditions) |>
  arrange(fatality.rate) |>
  slice_max(fatality.rate, n = 10) |>
  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +
  geom_col(fill = "maroon") +
  coord_flip() +
  labs(
    title = "Fatality rate in himalayan peaks",
    x = "Peak name",
    y = "Fatality rate"
  ) +
  theme_minimal()

##### among the 8k peaks

exped.8k |> left_join(select(peak.data, PEAKID, PKNAME), by = "PEAKID") |>
  group_by(PKNAME) |>
  summarise(
    expeditions = n(),
    total.deaths = sum(MDEATHS+HDEATHS),
    fatality.rate = total.deaths / expeditions) |>
  arrange(fatality.rate) |>
  #slice_max(fatality.rate, n = 10) |>
  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +
  geom_col(fill = "firebrick3") +
  coord_flip() +
  labs(
    title = "Fatality rate in 8k peaks",
    x = "Peak name",
    y = "Fatality rate"
  ) +
  theme_minimal()

##### in case of number of fatalities in the peaks

exped.data |> left_join(select(peak.data, PEAKID, PKNAME), by = "PEAKID") |>
  group_by(PKNAME) |>
  summarise(total.deaths = sum(MDEATHS+HDEATHS)) |>
  arrange(total.deaths) |>
  slice_max(total.deaths, n = 10) |>
  ggplot(aes(x = reorder(PKNAME, total.deaths), y = total.deaths)) +
  geom_col(fill = "red4") +
  coord_flip() +
  labs(
    title = "Number of deaths in himalayan peaks",
    x = "Peak name",
    y = "No. of death"
  ) +
  geom_text(aes(label = total.deaths), hjust = -.3) +
  theme_minimal()


### 7. Does the use of supplemental oxygen affect the success rate?

exped.data |> mutate(success = SUCCESS1 | SUCCESS2 | SUCCESS3 | SUCCESS4) |>
  group_by(O2USED) |>
  summarise(success.rate = (mean(success, na.rm = TRUE))) |>
  ggplot(aes(x = O2USED, y = success.rate, fill = O2USED)) +
  geom_col(width = 0.3) +
  geom_text(aes(label = scales::percent(success.rate, accuracy = 0.1), vjust = -0.5,  size = 4)
) +
  theme(legend.position = "none") +
  labs(
    title = "Success rate with supplemental oxygen",
    x = "Oxygen used",
    y = "Success rate")


### 8. Are commercial or standard routes more frequently involved in accidents?

exped.data |>
  mutate(accident = !is.na(ACCIDENTS)) |>
  group_by(COMRTE, STDRTE) |>
  summarise(
    accident_rate = scales::percent(mean(accident, na.rm = TRUE)),
    total = n()
  )

