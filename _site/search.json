[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ahmed A. Adib",
    "section": "",
    "text": "Hello, please hesitate to contact me."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Date\n\n\n\nTitle\n\n\n\nAuthor\n\n\n\n\n\n\n\n\n07-22-2025\n\n\nIHC Data\n\n\nAhmed A. Adib\n\n\n\n\n\n\n07-22-2025\n\n\nIHC Data\n\n\nAhmed A. Adib\n\n\n\n\n\n\n07-22-2025\n\n\nHimalayan expedition data\n\n\nAhmed A. Adib\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/project_title.html",
    "href": "projects/project_title.html",
    "title": "Himalayan expedition data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(tidytuesdayR)"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Ahmed A. Adib",
    "section": "",
    "text": "Hello, please hesitate to contact me."
  },
  {
    "objectID": "projects/project_title.html#packages-used",
    "href": "projects/project_title.html#packages-used",
    "title": "Himalayan expedition data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(tidytuesdayR)"
  },
  {
    "objectID": "projects/project_title.html#get-the-data",
    "href": "projects/project_title.html#get-the-data",
    "title": "Himalayan expedition data",
    "section": "Get the data",
    "text": "Get the data\n\nhimalayan.data = tidytuesdayR::tt_load(2025, week = 3)\n\nAssign different data to different variables\n\nexped.data = himalayan.data$exped_tidy\npeak.data = himalayan.data$peaks_tidy\n\nCheck the data\n\nhead(exped.data)\n\n# A tibble: 6 × 69\n  EXPID PEAKID  YEAR SEASON SEASON_FACTOR  HOST HOST_FACTOR ROUTE1 ROUTE2 ROUTE3\n  &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;  &lt;lgl&gt; \n1 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n2 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n3 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n4 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n5 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n6 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n# ℹ 59 more variables: ROUTE4 &lt;lgl&gt;, NATION &lt;chr&gt;, LEADERS &lt;chr&gt;,\n#   SPONSOR &lt;chr&gt;, SUCCESS1 &lt;lgl&gt;, SUCCESS2 &lt;lgl&gt;, SUCCESS3 &lt;lgl&gt;,\n#   SUCCESS4 &lt;lgl&gt;, ASCENT1 &lt;chr&gt;, ASCENT2 &lt;chr&gt;, ASCENT3 &lt;lgl&gt;, ASCENT4 &lt;lgl&gt;,\n#   CLAIMED &lt;lgl&gt;, DISPUTED &lt;lgl&gt;, COUNTRIES &lt;chr&gt;, APPROACH &lt;chr&gt;,\n#   BCDATE &lt;date&gt;, SMTDATE &lt;date&gt;, SMTTIME &lt;chr&gt;, SMTDAYS &lt;dbl&gt;, TOTDAYS &lt;dbl&gt;,\n#   TERMDATE &lt;date&gt;, TERMREASON &lt;dbl&gt;, TERMREASON_FACTOR &lt;chr&gt;, TERMNOTE &lt;chr&gt;,\n#   HIGHPOINT &lt;dbl&gt;, TRAVERSE &lt;lgl&gt;, SKI &lt;lgl&gt;, PARAPENTE &lt;lgl&gt;, CAMPS &lt;dbl&gt;, …\n\ncolnames(exped.data)\n\n [1] \"EXPID\"             \"PEAKID\"            \"YEAR\"             \n [4] \"SEASON\"            \"SEASON_FACTOR\"     \"HOST\"             \n [7] \"HOST_FACTOR\"       \"ROUTE1\"            \"ROUTE2\"           \n[10] \"ROUTE3\"            \"ROUTE4\"            \"NATION\"           \n[13] \"LEADERS\"           \"SPONSOR\"           \"SUCCESS1\"         \n[16] \"SUCCESS2\"          \"SUCCESS3\"          \"SUCCESS4\"         \n[19] \"ASCENT1\"           \"ASCENT2\"           \"ASCENT3\"          \n[22] \"ASCENT4\"           \"CLAIMED\"           \"DISPUTED\"         \n[25] \"COUNTRIES\"         \"APPROACH\"          \"BCDATE\"           \n[28] \"SMTDATE\"           \"SMTTIME\"           \"SMTDAYS\"          \n[31] \"TOTDAYS\"           \"TERMDATE\"          \"TERMREASON\"       \n[34] \"TERMREASON_FACTOR\" \"TERMNOTE\"          \"HIGHPOINT\"        \n[37] \"TRAVERSE\"          \"SKI\"               \"PARAPENTE\"        \n[40] \"CAMPS\"             \"ROPE\"              \"TOTMEMBERS\"       \n[43] \"SMTMEMBERS\"        \"MDEATHS\"           \"TOTHIRED\"         \n[46] \"SMTHIRED\"          \"HDEATHS\"           \"NOHIRED\"          \n[49] \"O2USED\"            \"O2NONE\"            \"O2CLIMB\"          \n[52] \"O2DESCENT\"         \"O2SLEEP\"           \"O2MEDICAL\"        \n[55] \"O2TAKEN\"           \"O2UNKWN\"           \"OTHERSMTS\"        \n[58] \"CAMPSITES\"         \"ROUTEMEMO\"         \"ACCIDENTS\"        \n[61] \"ACHIEVMENT\"        \"AGENCY\"            \"COMRTE\"           \n[64] \"STDRTE\"            \"PRIMRTE\"           \"PRIMMEM\"          \n[67] \"PRIMREF\"           \"PRIMID\"            \"CHKSUM\""
  },
  {
    "objectID": "projects/project_title.html#disclaimer",
    "href": "projects/project_title.html#disclaimer",
    "title": "Himalayan expedition data",
    "section": "Disclaimer",
    "text": "Disclaimer\nSince 8000 meter peaks are the most prestigious ones in terms of mountaineering, we will create a separate data file containing only the 8000m peaks. First, get the names of the peaks from the peak.data file.\n\npeak_8k_names = peak.data |&gt; filter(HEIGHTM &gt;= 8000) |&gt; pull(PEAKID)\n\nJust to know the names of the peaks, we can extract the PKNAME instead of PEAKID\n\npeak.data |&gt; filter(HEIGHTM &gt;= 8000) |&gt; pull(PKNAME)\n\n [1] \"Annapurna I\"           \"Annapurna I East\"      \"Annapurna I Middle\"   \n [4] \"Cho Oyu\"               \"Dhaulagiri I\"          \"Everest\"              \n [7] \"Kangchenjunga Central\" \"Kangchenjunga\"         \"Kangchenjunga South\"  \n[10] \"Lhotse\"                \"Lhotse Shar\"           \"Makalu\"               \n[13] \"Manaslu\"               \"Yalung Kang\"           \"Lhotse Middle\"        \n[16] \"Yalung Kang West\"     \n\n\nWe can see there are 16 different names. Although there are some names missing from the actual list of 8000m peaks. I have no idea why some are missing.\nNow we extract the expedition details of these 8000m peaks.\n\nexped.8k = exped.data |&gt; filter(PEAKID %in% peak_8k_names)"
  },
  {
    "objectID": "projects/project_title.html#questions",
    "href": "projects/project_title.html#questions",
    "title": "Himalayan expedition data",
    "section": "Questions",
    "text": "Questions\n\n1. What is the most successful route for the expedition for 8000m peaks?\nThere are 4 different routes enlisted for each peaks, assigned by ROUTE1, ROUTE2, ROUTE3 and ROUTE4. The successful climbing using these routes are stored in corresponding logical vector SUCCESS1, SUCCESS2, SUCCESS3, SUCCESS4. We will use these SUCCESS data along with the exped.8k dataset.\n\nexped.8k |&gt; pivot_longer(cols = c(SUCCESS1, SUCCESS2, SUCCESS3, SUCCESS4),\n                           names_to = \"route_success\",\n                           values_to = \"success\") |&gt;\n  group_by(route_success) |&gt;\n  summarise(success_rate = (mean(success, na.rm = TRUE))*100) |&gt;\n  ggplot(aes(x = route_success, y = success_rate, fill = route_success)) +\n  geom_col(width = 0.6, color = \"black\") +\n  labs(\n    title = \"Success rate by route\",\n    x = \"Route (1-4)\",\n    y = \"Success rate (%)\"\n  )\n\n\n\n\n\n\n\n\n\n\n2. Which countries has lead the most successful expedition?\nAgain, we will use the SUCCESS vector; now with the NATION vector; with the exped.data for the details of the all peaks.\n\nexped.data |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n    ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nWhat about the 8000m peaks\nWe will just use the exped.8k data instead of exped.data from the previous chunk.\n\nexped.8k |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"orangered4\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation on 8000m peaks\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nWhat about the one we actually care about (Everest)\n\nexped.8k |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  filter(PEAKID == \"EVER\") |&gt;     #just need to filter the data for Everest\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"lightsalmon3\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation on Everest\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n3. How does the travel time vary in different seasons?\n\nexped.data |&gt; filter(!is.na(TOTDAYS), !is.na(SEASON_FACTOR)) |&gt;\n  ggplot(aes(x = SEASON_FACTOR, y = TOTDAYS, fill = SEASON_FACTOR)) +\n  geom_jitter(aes(colour = SEASON_FACTOR)) +\n  scale_color_viridis_d(alpha = 1) +\n  labs(\n    title = \"Expedition duration by season\",\n    x = \"Season\",\n    y = \"Total days of expedition\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n4. Most common reasons for expedition termination\n\nexped.data |&gt; count(TERMREASON_FACTOR, sort=TRUE) |&gt;\n  ggplot(aes(x = reorder(TERMREASON_FACTOR,n), y = n, fill = n)) +\n  geom_col() + geom_text(aes(label = n, hjust = -0.5)) +\n  coord_flip() +\n  labs(\n    title = \"Common reasons for expedition termination\",\n    x = \"Number\",\n    y = \"Reasons\"\n  )\n\n\n\n\n\n\n\n\n\n\n5. Which peak has the highest fatality rate?\n\nexped.data |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(\n    expeditions = n(),\n    total.deaths = sum(MDEATHS+HDEATHS),\n    fatality.rate = total.deaths / expeditions) |&gt;\n  arrange(fatality.rate) |&gt;\n  slice_max(fatality.rate, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +\n  geom_col(fill = \"maroon\") +\n  coord_flip() +\n  labs(\n    title = \"Fatality rate in himalayan peaks\",\n    x = \"Peak name\",\n    y = \"Fatality rate\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nAmong the 8000m peaks\n\nexped.8k |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(\n    expeditions = n(),\n    total.deaths = sum(MDEATHS+HDEATHS),\n    fatality.rate = total.deaths / expeditions) |&gt;\n  arrange(fatality.rate) |&gt;\n  #slice_max(fatality.rate, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +\n  geom_col(fill = \"firebrick3\") +\n  coord_flip() +\n  labs(\n    title = \"Fatality rate in 8k peaks\",\n    x = \"Peak name\",\n    y = \"Fatality rate\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nIn case of number of fatalities on the peaks\n\nexped.data |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(total.deaths = sum(MDEATHS+HDEATHS)) |&gt;\n  arrange(total.deaths) |&gt;\n  slice_max(total.deaths, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, total.deaths), y = total.deaths)) +\n  geom_col(fill = \"red4\") +\n  coord_flip() +\n  labs(\n    title = \"Number of deaths in himalayan peaks\",\n    x = \"Peak name\",\n    y = \"No. of death\"\n  ) +\n  geom_text(aes(label = total.deaths), hjust = -.3) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n6. Does the use of supplemental oxygen affect the success rate? and death rate?\n\nexped.data |&gt; mutate(success = SUCCESS1 | SUCCESS2 | SUCCESS3 | SUCCESS4,\n                     death = MDEATHS + HDEATHS) |&gt;\n  group_by(O2USED) |&gt;\n  summarise(success.rate = (mean(success, na.rm = TRUE)),\n            death.rate = mean(death &gt; 0, na.rm = TRUE)) |&gt;\n  pivot_longer(cols = c(success.rate, death.rate), names_to = \"names\", values_to = \"rate\") |&gt;\n  ggplot(aes(x = O2USED, y = rate, fill = names)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent) +\n  labs(title = \"Impact of supplemental Oxygen use on success and deaths\",\n       x = \"Oxygen Used\", y = \"Rate\")\n\n\n\n\n\n\n\n\n\n\n7. Which peaks have the most attempts but lowest summit rate? (Hardest peaks to summit)\n\nexped.data |&gt;\n  mutate(success = SUCCESS1 | SUCCESS2 | SUCCESS3 | SUCCESS4) |&gt;\n  group_by(PEAKID) |&gt;\n  summarise(\n    attempts = n(),\n    successes = sum(success, na.rm = TRUE),\n    summit.rate = successes / attempts) |&gt;\n  left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  filter(!is.na(PKNAME), attempts &gt;= 5) |&gt;\n  arrange(attempts) |&gt;\n  slice_head(n = 10) |&gt;\n  arrange(summit.rate) |&gt;\n  #slice_head(n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, desc(summit.rate)), y = summit.rate)) +\n  geom_col(fill = \"darkred\") +\n  geom_text(aes(label = scales::percent(summit.rate, accuracy = 0.1)), hjust = -0.1) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 Hardest Peaks to Summit\",\n    subtitle = \"Peaks with most attempts but lowest summit success rate\",\n    x = \"Peak Name\",\n    y = \"Summit Success Rate\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "projects/CopyOfproject_title.html",
    "href": "projects/CopyOfproject_title.html",
    "title": "IHC Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "projects/CopyOfproject_title.html#packages-used",
    "href": "projects/CopyOfproject_title.html#packages-used",
    "title": "IHC Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "projects/CopyOfproject_title.html#get-the-data",
    "href": "projects/CopyOfproject_title.html#get-the-data",
    "title": "Himalayan expedition data",
    "section": "Get the data",
    "text": "Get the data\n\nhimalayan.data = tidytuesdayR::tt_load(2025, week = 3)\n\nAssign different data to different variables\n\nexped.data = himalayan.data$exped_tidy\npeak.data = himalayan.data$peaks_tidy\n\nCheck the data\n\nhead(exped.data)\n\n# A tibble: 6 × 69\n  EXPID PEAKID  YEAR SEASON SEASON_FACTOR  HOST HOST_FACTOR ROUTE1 ROUTE2 ROUTE3\n  &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;  &lt;lgl&gt; \n1 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n2 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n3 EVER… EVER    2020      1 Spring            2 China       N Col… &lt;NA&gt;   NA    \n4 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n5 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n6 AMAD… AMAD    2020      3 Autumn            1 Nepal       SW Ri… &lt;NA&gt;   NA    \n# ℹ 59 more variables: ROUTE4 &lt;lgl&gt;, NATION &lt;chr&gt;, LEADERS &lt;chr&gt;,\n#   SPONSOR &lt;chr&gt;, SUCCESS1 &lt;lgl&gt;, SUCCESS2 &lt;lgl&gt;, SUCCESS3 &lt;lgl&gt;,\n#   SUCCESS4 &lt;lgl&gt;, ASCENT1 &lt;chr&gt;, ASCENT2 &lt;chr&gt;, ASCENT3 &lt;lgl&gt;, ASCENT4 &lt;lgl&gt;,\n#   CLAIMED &lt;lgl&gt;, DISPUTED &lt;lgl&gt;, COUNTRIES &lt;chr&gt;, APPROACH &lt;chr&gt;,\n#   BCDATE &lt;date&gt;, SMTDATE &lt;date&gt;, SMTTIME &lt;chr&gt;, SMTDAYS &lt;dbl&gt;, TOTDAYS &lt;dbl&gt;,\n#   TERMDATE &lt;date&gt;, TERMREASON &lt;dbl&gt;, TERMREASON_FACTOR &lt;chr&gt;, TERMNOTE &lt;chr&gt;,\n#   HIGHPOINT &lt;dbl&gt;, TRAVERSE &lt;lgl&gt;, SKI &lt;lgl&gt;, PARAPENTE &lt;lgl&gt;, CAMPS &lt;dbl&gt;, …\n\ncolnames(exped.data)\n\n [1] \"EXPID\"             \"PEAKID\"            \"YEAR\"             \n [4] \"SEASON\"            \"SEASON_FACTOR\"     \"HOST\"             \n [7] \"HOST_FACTOR\"       \"ROUTE1\"            \"ROUTE2\"           \n[10] \"ROUTE3\"            \"ROUTE4\"            \"NATION\"           \n[13] \"LEADERS\"           \"SPONSOR\"           \"SUCCESS1\"         \n[16] \"SUCCESS2\"          \"SUCCESS3\"          \"SUCCESS4\"         \n[19] \"ASCENT1\"           \"ASCENT2\"           \"ASCENT3\"          \n[22] \"ASCENT4\"           \"CLAIMED\"           \"DISPUTED\"         \n[25] \"COUNTRIES\"         \"APPROACH\"          \"BCDATE\"           \n[28] \"SMTDATE\"           \"SMTTIME\"           \"SMTDAYS\"          \n[31] \"TOTDAYS\"           \"TERMDATE\"          \"TERMREASON\"       \n[34] \"TERMREASON_FACTOR\" \"TERMNOTE\"          \"HIGHPOINT\"        \n[37] \"TRAVERSE\"          \"SKI\"               \"PARAPENTE\"        \n[40] \"CAMPS\"             \"ROPE\"              \"TOTMEMBERS\"       \n[43] \"SMTMEMBERS\"        \"MDEATHS\"           \"TOTHIRED\"         \n[46] \"SMTHIRED\"          \"HDEATHS\"           \"NOHIRED\"          \n[49] \"O2USED\"            \"O2NONE\"            \"O2CLIMB\"          \n[52] \"O2DESCENT\"         \"O2SLEEP\"           \"O2MEDICAL\"        \n[55] \"O2TAKEN\"           \"O2UNKWN\"           \"OTHERSMTS\"        \n[58] \"CAMPSITES\"         \"ROUTEMEMO\"         \"ACCIDENTS\"        \n[61] \"ACHIEVMENT\"        \"AGENCY\"            \"COMRTE\"           \n[64] \"STDRTE\"            \"PRIMRTE\"           \"PRIMMEM\"          \n[67] \"PRIMREF\"           \"PRIMID\"            \"CHKSUM\""
  },
  {
    "objectID": "projects/CopyOfproject_title.html#disclaimer",
    "href": "projects/CopyOfproject_title.html#disclaimer",
    "title": "Himalayan expedition data",
    "section": "Disclaimer",
    "text": "Disclaimer\nSince 8000 meter peaks are the most prestigious ones in terms of mountaineering, we will create a separate data file containing only the 8000m peaks. First, get the names of the peaks from the peak.data file.\n\npeak_8k_names = peak.data |&gt; filter(HEIGHTM &gt;= 8000) |&gt; pull(PEAKID)\n\nJust to know the names of the peaks, we can extract the PKNAME instead of PEAKID\n\npeak.data |&gt; filter(HEIGHTM &gt;= 8000) |&gt; pull(PKNAME)\n\n [1] \"Annapurna I\"           \"Annapurna I East\"      \"Annapurna I Middle\"   \n [4] \"Cho Oyu\"               \"Dhaulagiri I\"          \"Everest\"              \n [7] \"Kangchenjunga Central\" \"Kangchenjunga\"         \"Kangchenjunga South\"  \n[10] \"Lhotse\"                \"Lhotse Shar\"           \"Makalu\"               \n[13] \"Manaslu\"               \"Yalung Kang\"           \"Lhotse Middle\"        \n[16] \"Yalung Kang West\"     \n\n\nWe can see there are 16 different names. Although there are some names missing from the actual list of 8000m peaks. I have no idea why some are missing.\nNow we extract the expedition details of these 8000m peaks.\n\nexped.8k = exped.data |&gt; filter(PEAKID %in% peak_8k_names)"
  },
  {
    "objectID": "projects/CopyOfproject_title.html#questions",
    "href": "projects/CopyOfproject_title.html#questions",
    "title": "Himalayan expedition data",
    "section": "Questions",
    "text": "Questions\n\n1. What is the most successful route for the expedition for 8000m peaks?\nThere are 4 different routes enlisted for each peaks, assigned by ROUTE1, ROUTE2, ROUTE3 and ROUTE4. The successful climbing using these routes are stored in corresponding logical vector SUCCESS1, SUCCESS2, SUCCESS3, SUCCESS4. We will use these SUCCESS data along with the exped.8k dataset.\n\nexped.8k |&gt; pivot_longer(cols = c(SUCCESS1, SUCCESS2, SUCCESS3, SUCCESS4),\n                           names_to = \"route_success\",\n                           values_to = \"success\") |&gt;\n  group_by(route_success) |&gt;\n  summarise(success_rate = (mean(success, na.rm = TRUE))*100) |&gt;\n  ggplot(aes(x = route_success, y = success_rate, fill = route_success)) +\n  geom_col(width = 0.6, color = \"black\") +\n  labs(\n    title = \"Success rate by route\",\n    x = \"Route (1-4)\",\n    y = \"Success rate (%)\"\n  )\n\n\n\n\n\n\n\n\n\n\n2. Which countries has lead the most successful expedition?\nAgain, we will use the SUCCESS vector; now with the NATION vector; with the exped.data for the details of the all peaks.\n\nexped.data |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n    ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nWhat about the 8000m peaks\nWe will just use the exped.8k data instead of exped.data from the previous chunk.\n\nexped.8k |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"orangered4\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation on 8000m peaks\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nWhat about the one we actually care about (Everest)\n\nexped.8k |&gt; filter(SUCCESS1 == TRUE | SUCCESS2 == TRUE | SUCCESS3 == TRUE | SUCCESS4 == TRUE) |&gt;\n  filter(PEAKID == \"EVER\") |&gt;     #just need to filter the data for Everest\n  count(NATION, sort = TRUE) |&gt;\n  ggplot(aes(x = reorder(NATION, n), y = n)) +\n  geom_col(fill = \"lightsalmon3\") +\n  geom_text(aes(label = n), hjust = -0.1, size = 3) +\n  labs(\n    title = \"Successful expedition by nation on Everest\",\n    x = \"Nation\",\n    y = \"Number of successful expedition\"\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n3. How does the travel time vary in different seasons?\n\nexped.data |&gt; filter(!is.na(TOTDAYS), !is.na(SEASON_FACTOR)) |&gt;\n  ggplot(aes(x = SEASON_FACTOR, y = TOTDAYS, fill = SEASON_FACTOR)) +\n  geom_jitter(aes(colour = SEASON_FACTOR)) +\n  scale_color_viridis_d(alpha = 1) +\n  labs(\n    title = \"Expedition duration by season\",\n    x = \"Season\",\n    y = \"Total days of expedition\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n4. Most common reasons for expedition termination\n\nexped.data |&gt; count(TERMREASON_FACTOR, sort=TRUE) |&gt;\n  ggplot(aes(x = reorder(TERMREASON_FACTOR,n), y = n, fill = n)) +\n  geom_col() + geom_text(aes(label = n, hjust = -0.5)) +\n  coord_flip() +\n  labs(\n    title = \"Common reasons for expedition termination\",\n    x = \"Number\",\n    y = \"Reasons\"\n  )\n\n\n\n\n\n\n\n\n\n\n5. Which peak has the highest fatality rate?\n\nexped.data |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(\n    expeditions = n(),\n    total.deaths = sum(MDEATHS+HDEATHS),\n    fatality.rate = total.deaths / expeditions) |&gt;\n  arrange(fatality.rate) |&gt;\n  slice_max(fatality.rate, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +\n  geom_col(fill = \"maroon\") +\n  coord_flip() +\n  labs(\n    title = \"Fatality rate in himalayan peaks\",\n    x = \"Peak name\",\n    y = \"Fatality rate\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nAmong the 8000m peaks\n\nexped.8k |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(\n    expeditions = n(),\n    total.deaths = sum(MDEATHS+HDEATHS),\n    fatality.rate = total.deaths / expeditions) |&gt;\n  arrange(fatality.rate) |&gt;\n  #slice_max(fatality.rate, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, fatality.rate), y = fatality.rate)) +\n  geom_col(fill = \"firebrick3\") +\n  coord_flip() +\n  labs(\n    title = \"Fatality rate in 8k peaks\",\n    x = \"Peak name\",\n    y = \"Fatality rate\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nIn case of number of fatalities on the peaks\n\nexped.data |&gt; left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  group_by(PKNAME) |&gt;\n  summarise(total.deaths = sum(MDEATHS+HDEATHS)) |&gt;\n  arrange(total.deaths) |&gt;\n  slice_max(total.deaths, n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, total.deaths), y = total.deaths)) +\n  geom_col(fill = \"red4\") +\n  coord_flip() +\n  labs(\n    title = \"Number of deaths in himalayan peaks\",\n    x = \"Peak name\",\n    y = \"No. of death\"\n  ) +\n  geom_text(aes(label = total.deaths), hjust = -.3) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n6. Does the use of supplemental oxygen affect the success rate? and death rate?\n\nexped.data |&gt; mutate(success = SUCCESS1 | SUCCESS2 | SUCCESS3 | SUCCESS4,\n                     death = MDEATHS + HDEATHS) |&gt;\n  group_by(O2USED) |&gt;\n  summarise(success.rate = (mean(success, na.rm = TRUE)),\n            death.rate = mean(death &gt; 0, na.rm = TRUE)) |&gt;\n  pivot_longer(cols = c(success.rate, death.rate), names_to = \"names\", values_to = \"rate\") |&gt;\n  ggplot(aes(x = O2USED, y = rate, fill = names)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent) +\n  labs(title = \"Impact of supplemental Oxygen use on success and deaths\",\n       x = \"Oxygen Used\", y = \"Rate\")\n\n\n\n\n\n\n\n\n\n\n7. Which peaks have the most attempts but lowest summit rate? (Hardest peaks to summit)\n\nexped.data |&gt;\n  mutate(success = SUCCESS1 | SUCCESS2 | SUCCESS3 | SUCCESS4) |&gt;\n  group_by(PEAKID) |&gt;\n  summarise(\n    attempts = n(),\n    successes = sum(success, na.rm = TRUE),\n    summit.rate = successes / attempts) |&gt;\n  left_join(select(peak.data, PEAKID, PKNAME), by = \"PEAKID\") |&gt;\n  filter(!is.na(PKNAME), attempts &gt;= 5) |&gt;\n  arrange(attempts) |&gt;\n  slice_head(n = 10) |&gt;\n  arrange(summit.rate) |&gt;\n  #slice_head(n = 10) |&gt;\n  ggplot(aes(x = reorder(PKNAME, desc(summit.rate)), y = summit.rate)) +\n  geom_col(fill = \"darkred\") +\n  geom_text(aes(label = scales::percent(summit.rate, accuracy = 0.1)), hjust = -0.1) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 Hardest Peaks to Summit\",\n    subtitle = \"Peaks with most attempts but lowest summit success rate\",\n    x = \"Peak Name\",\n    y = \"Summit Success Rate\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "projects/CopyOfproject_title.html#import-master-data-file",
    "href": "projects/CopyOfproject_title.html#import-master-data-file",
    "title": "IHC Data",
    "section": "Import master data file",
    "text": "Import master data file\n\ndata = read_excel(\"D:/Drive/OneDrive - University of Oklahoma/Thymic data anylsis/IHC Data/IHC_Analysis/IHC Data master file.xlsx\")\n\nCheck the data now\n\nglimpse(data)\n\nRows: 108\nColumns: 64\n$ Thymus                                       &lt;chr&gt; \"Thymus 2\", \"Thymus 2\", \"…\n$ Age                                          &lt;chr&gt; \"7m, 2d\", \"7m, 2d\", \"7m, …\n$ Categories                                   &lt;chr&gt; \"Infant\", \"Infant\", \"Infa…\n$ Section                                      &lt;chr&gt; \"2.1\", \"2.2A\", \"2.2000000…\n$ `All Positive`                               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD21 + CD19 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD21 + BCL6 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD19 + BCL6 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Only CD21 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Only CD19 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 2, 1, 1, 0, 0…\n$ `Only BCL6 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Total CD21 Positive`                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Total CD19 Positive`                        &lt;dbl&gt; 0, 0, 0, 0, 2, 1, 1, 0, 0…\n$ `CD19 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 218218976, 244650560, 217…\n$ `CD19 Area (μm²)`                            &lt;dbl&gt; 5738681, 3543524, 6727770…\n$ `CD19 Weak Area (μm²)`                       &lt;dbl&gt; 2317004, 2084721, 3185500…\n$ `CD19 Moderate Area (μm²)`                   &lt;dbl&gt; 1131670.4, 745244.7, 1346…\n$ `CD19 Strong Area (μm²)`                     &lt;dbl&gt; 2290007.2, 713557.9, 2195…\n$ `CD19 DNA Area (μm²)`                        &lt;dbl&gt; 154831888, 181182592, 142…\n$ `CD19 BKGD Area (μm²)`                       &lt;dbl&gt; 3882066, 3277039, 3435594…\n$ `% CD19 Positive Tissue`                     &lt;dbl&gt; 2.629781, 1.448402, 3.098…\n$ `% CD19 Positive Tissue (weak)`              &lt;dbl&gt; 1.061779, 0.852122, 1.467…\n$ `% CD19 Positive Tissue (moderate)`          &lt;dbl&gt; 0.518594, 0.304616, 0.620…\n$ `% CD19 Positive Tissue (strong)`            &lt;dbl&gt; 1.049408, 0.291664, 1.011…\n$ `% DNA Positive Tissue`                      &lt;dbl&gt; 70.95253, 74.05771, 65.67…\n$ `% BKGD Positive Tissue`                     &lt;dbl&gt; 1.778977, 1.339477, 1.582…\n$ `CD19 Average Positive Optical Density`      &lt;dbl&gt; 0.361160, 0.270572, 0.343…\n$ `CD19 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.453997, 0.444051, 0.433…\n$ `CD19 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.237105, 0.208072, 0.212…\n$ `% CD19 Negative Tissue`                     &lt;dbl&gt; 25.59020, 23.91391, 30.66…\n$ `CD21 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 238645856, 245135728, 206…\n$ `CD21 Area (μm²)`                            &lt;dbl&gt; 2794418.8, 4949142.5, 145…\n$ `CD21 Weak Area (μm²)`                       &lt;dbl&gt; 1946252.1, 3303030.5, 540…\n$ `CD21 Moderate Area (μm²)`                   &lt;dbl&gt; 443148.75, 884863.75, 188…\n$ `CD21 Strong Area (μm²)`                     &lt;dbl&gt; 405017.88, 761248.38, 727…\n$ `CD21 DNA Area (μm²)`                        &lt;dbl&gt; 157355104, 164098496, 149…\n$ `CD21 BKGD Area (μm²)`                       &lt;dbl&gt; 4354785.00, 10589132.00, …\n$ `% CD21 Positive Tissue`                     &lt;dbl&gt; 1.170948, 2.018940, 0.705…\n$ `% CD21 Positive Tissue (weak)`              &lt;dbl&gt; 0.815540, 1.347429, 0.261…\n$ `% CD21 Positive Tissue (moderate)`          &lt;dbl&gt; 0.185693, 0.360969, 0.091…\n$ `% CD21 Positive Tissue (strong)`            &lt;dbl&gt; 0.169715, 0.310542, 0.352…\n$ `% CD21 DNA Positive Tissue`                 &lt;dbl&gt; 65.93666, 66.94190, 72.59…\n$ `% CD21 BKGD Positive Tissue`                &lt;dbl&gt; 1.824790, 4.319702, 0.081…\n$ `CD21 Average Positive Optical Density`      &lt;dbl&gt; 0.260792, 0.252763, 0.449…\n$ `CD21 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.392601, 0.358279, 0.365…\n$ `CD21 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.216457, 0.244253, 0.186…\n$ `% CD21 Negative Tissue`                     &lt;dbl&gt; 32.03041, 28.86123, 26.99…\n$ `BCL6 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 219857104, 273106880, 209…\n$ `BCL-6 Area (μm²)`                           &lt;dbl&gt; 35492076, 22197608, 33557…\n$ `BCL-6 Weak Area (μm²)`                      &lt;dbl&gt; 16796118, 11604961, 17025…\n$ `BCL-6 Moderate Area (μm²)`                  &lt;dbl&gt; 7590232.5, 4555713.5, 727…\n$ `BCL-6 Strong Area (μm²)`                    &lt;dbl&gt; 11105725.0, 6036933.5, 92…\n$ `BCL6 DNA Area (μm²)`                        &lt;dbl&gt; 143410432, 166257456, 139…\n$ `BCL6 BKGD Area (μm²)`                       &lt;dbl&gt; 10450517.0, 16926290.0, 6…\n$ `% BCL-6 Positive Tissue`                    &lt;dbl&gt; 16.143248, 8.127810, 16.0…\n$ `% BCL-6 Positive Tissue (weak)`             &lt;dbl&gt; 7.639561, 4.249238, 8.130…\n$ `% BCL-6 Positive Tissue (moderate)`         &lt;dbl&gt; 3.452348, 1.668106, 3.476…\n$ `% BCL-6 Positive Tissue (strong)`           &lt;dbl&gt; 5.051338, 2.210465, 4.418…\n$ `% BCL6 DNA Positive Tissue`                 &lt;dbl&gt; 65.22893, 60.87633, 66.71…\n$ `% BCL6 BKGD Positive Tissue`                &lt;dbl&gt; 4.753322, 6.197680, 3.306…\n$ `BCL-6 Average Positive Optical Density`     &lt;dbl&gt; 0.336849, 0.315995, 0.320…\n$ `BCL6 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.414238, 0.357134, 0.481…\n$ `BCL6 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.269646, 0.281178, 0.265…\n$ `% BCL6 Negative Tissue`                     &lt;dbl&gt; 24.93337, 31.28863, 24.94…\n\n\n\n#data = data |&gt; mutate(Section = as.numeric(Section))\n#data = data |&gt; mutate(Section = round(Section, 1))"
  },
  {
    "objectID": "projects/CopyOfproject_title.html#clean-up-the-data",
    "href": "projects/CopyOfproject_title.html#clean-up-the-data",
    "title": "IHC Data",
    "section": "Clean up the data",
    "text": "Clean up the data\n\nChange the class of the section column\n\ndata = data |&gt;\n  mutate(Section = ifelse(\n    grepl(\"^\\\\d+\\\\.?\\\\d*$\", Section),               # Checks if purely numeric (integer or decimal)\n    as.character(round(as.numeric(Section), 1)),    # Round and convert back to character\n    Section                                         # Keep original for non-numeric entries\n  ))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Section = ifelse(...)`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\n\n\n\nChange the column names\n\ncolnames(data)[3] = \"age_cat\"\ncolnames(data)[4] = \"section\"\ncolnames(data)[5] = \"all_positive\"\ncolnames(data)[6] = \"follicles\"\ncolnames(data)[7] = \"cd21_bcl6_positive\"\ncolnames(data)[8] = \"cd19_bcl6_positive\"\ncolnames(data)[9] = \"only_cd21_positive\"\ncolnames(data)[10] = \"only_cd19_positive\"\ncolnames(data)[11] = \"only_bcl6_positive\"\ncolnames(data)[12] = \"total_cd21_positive\"\ncolnames(data)[13] = \"total_cd19_positive\"\ncolnames(data)[14]\n\n[1] \"CD19 Tissue Area Analyzed (μm²)\"\n\n\n\ndata |&gt; filter(!is.na(`CD19 Area (μm²)`)) |&gt;\n  group_by(age_cat) |&gt;\n  mutate(age_cat = factor(age_cat, levels = c(\"Infant\", \"Toddler\", \"Pre-pubertal\", \"Peri-pubertal\"))) |&gt;\n  ggplot(aes(x = age_cat, y = `CD19 Area (μm²)`, fill = age_cat)) +\n  geom_boxplot(width = 0.5) +\n  geom_jitter(position = position_jitter(width = 0.2), alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal() +\n  labs(\n    title = \"CD19 positive area in different age groups\",\n    x = \"Age categories\",\n    y = \"CD19 area (μm²)\"\n  )\n\n\n\n\n\n\n\n\n\ndata |&gt; filter(!is.na(`CD21 Area (μm²)`)) |&gt;\n  group_by(age_cat) |&gt;\n  mutate(age_cat = factor(age_cat, levels = c(\"Infant\", \"Toddler\", \"Pre-pubertal\", \"Peri-pubertal\"))) |&gt;\n  ggplot(aes(x = age_cat, y = `CD21 Area (μm²)`, fill = age_cat)) +\n  geom_boxplot(width = 0.5) +\n  geom_jitter(position = position_jitter(width = 0.2), alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal() +\n  labs(\n    title = \"CD21 positive area in different age groups\",\n    x = \"Age categories\",\n    y = \"CD21 area (μm²)\"\n  )"
  },
  {
    "objectID": "projects/CopyOfproject_title.knit.html",
    "href": "projects/CopyOfproject_title.knit.html",
    "title": "IHC Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "projects/CopyOfproject_title.knit.html#packages-used",
    "href": "projects/CopyOfproject_title.knit.html#packages-used",
    "title": "IHC Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "projects/CopyOfproject_title.knit.html#import-master-data-file",
    "href": "projects/CopyOfproject_title.knit.html#import-master-data-file",
    "title": "IHC Data",
    "section": "Import master data file",
    "text": "Import master data file\n\ndata = read_excel(\"D:/Drive/OneDrive - University of Oklahoma/Thymic data anylsis/IHC Data/IHC_Analysis/IHC Data master file.xlsx\")\n\nCheck the data now\n\nglimpse(data)\n\nRows: 108\nColumns: 64\n$ Thymus                                       &lt;chr&gt; \"Thymus 2\", \"Thymus 2\", \"…\n$ Age                                          &lt;chr&gt; \"7m, 2d\", \"7m, 2d\", \"7m, …\n$ Categories                                   &lt;chr&gt; \"Infant\", \"Infant\", \"Infa…\n$ Section                                      &lt;chr&gt; \"2.1\", \"2.2A\", \"2.2000000…\n$ `All Positive`                               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD21 + CD19 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD21 + BCL6 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `CD19 + BCL6 Positive`                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Only CD21 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Only CD19 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 2, 1, 1, 0, 0…\n$ `Only BCL6 Positive`                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Total CD21 Positive`                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Total CD19 Positive`                        &lt;dbl&gt; 0, 0, 0, 0, 2, 1, 1, 0, 0…\n$ `CD19 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 218218976, 244650560, 217…\n$ `CD19 Area (μm²)`                            &lt;dbl&gt; 5738681, 3543524, 6727770…\n$ `CD19 Weak Area (μm²)`                       &lt;dbl&gt; 2317004, 2084721, 3185500…\n$ `CD19 Moderate Area (μm²)`                   &lt;dbl&gt; 1131670.4, 745244.7, 1346…\n$ `CD19 Strong Area (μm²)`                     &lt;dbl&gt; 2290007.2, 713557.9, 2195…\n$ `CD19 DNA Area (μm²)`                        &lt;dbl&gt; 154831888, 181182592, 142…\n$ `CD19 BKGD Area (μm²)`                       &lt;dbl&gt; 3882066, 3277039, 3435594…\n$ `% CD19 Positive Tissue`                     &lt;dbl&gt; 2.629781, 1.448402, 3.098…\n$ `% CD19 Positive Tissue (weak)`              &lt;dbl&gt; 1.061779, 0.852122, 1.467…\n$ `% CD19 Positive Tissue (moderate)`          &lt;dbl&gt; 0.518594, 0.304616, 0.620…\n$ `% CD19 Positive Tissue (strong)`            &lt;dbl&gt; 1.049408, 0.291664, 1.011…\n$ `% DNA Positive Tissue`                      &lt;dbl&gt; 70.95253, 74.05771, 65.67…\n$ `% BKGD Positive Tissue`                     &lt;dbl&gt; 1.778977, 1.339477, 1.582…\n$ `CD19 Average Positive Optical Density`      &lt;dbl&gt; 0.361160, 0.270572, 0.343…\n$ `CD19 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.453997, 0.444051, 0.433…\n$ `CD19 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.237105, 0.208072, 0.212…\n$ `% CD19 Negative Tissue`                     &lt;dbl&gt; 25.59020, 23.91391, 30.66…\n$ `CD21 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 238645856, 245135728, 206…\n$ `CD21 Area (μm²)`                            &lt;dbl&gt; 2794418.8, 4949142.5, 145…\n$ `CD21 Weak Area (μm²)`                       &lt;dbl&gt; 1946252.1, 3303030.5, 540…\n$ `CD21 Moderate Area (μm²)`                   &lt;dbl&gt; 443148.75, 884863.75, 188…\n$ `CD21 Strong Area (μm²)`                     &lt;dbl&gt; 405017.88, 761248.38, 727…\n$ `CD21 DNA Area (μm²)`                        &lt;dbl&gt; 157355104, 164098496, 149…\n$ `CD21 BKGD Area (μm²)`                       &lt;dbl&gt; 4354785.00, 10589132.00, …\n$ `% CD21 Positive Tissue`                     &lt;dbl&gt; 1.170948, 2.018940, 0.705…\n$ `% CD21 Positive Tissue (weak)`              &lt;dbl&gt; 0.815540, 1.347429, 0.261…\n$ `% CD21 Positive Tissue (moderate)`          &lt;dbl&gt; 0.185693, 0.360969, 0.091…\n$ `% CD21 Positive Tissue (strong)`            &lt;dbl&gt; 0.169715, 0.310542, 0.352…\n$ `% CD21 DNA Positive Tissue`                 &lt;dbl&gt; 65.93666, 66.94190, 72.59…\n$ `% CD21 BKGD Positive Tissue`                &lt;dbl&gt; 1.824790, 4.319702, 0.081…\n$ `CD21 Average Positive Optical Density`      &lt;dbl&gt; 0.260792, 0.252763, 0.449…\n$ `CD21 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.392601, 0.358279, 0.365…\n$ `CD21 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.216457, 0.244253, 0.186…\n$ `% CD21 Negative Tissue`                     &lt;dbl&gt; 32.03041, 28.86123, 26.99…\n$ `BCL6 Tissue Area Analyzed (μm²)`            &lt;dbl&gt; 219857104, 273106880, 209…\n$ `BCL-6 Area (μm²)`                           &lt;dbl&gt; 35492076, 22197608, 33557…\n$ `BCL-6 Weak Area (μm²)`                      &lt;dbl&gt; 16796118, 11604961, 17025…\n$ `BCL-6 Moderate Area (μm²)`                  &lt;dbl&gt; 7590232.5, 4555713.5, 727…\n$ `BCL-6 Strong Area (μm²)`                    &lt;dbl&gt; 11105725.0, 6036933.5, 92…\n$ `BCL6 DNA Area (μm²)`                        &lt;dbl&gt; 143410432, 166257456, 139…\n$ `BCL6 BKGD Area (μm²)`                       &lt;dbl&gt; 10450517.0, 16926290.0, 6…\n$ `% BCL-6 Positive Tissue`                    &lt;dbl&gt; 16.143248, 8.127810, 16.0…\n$ `% BCL-6 Positive Tissue (weak)`             &lt;dbl&gt; 7.639561, 4.249238, 8.130…\n$ `% BCL-6 Positive Tissue (moderate)`         &lt;dbl&gt; 3.452348, 1.668106, 3.476…\n$ `% BCL-6 Positive Tissue (strong)`           &lt;dbl&gt; 5.051338, 2.210465, 4.418…\n$ `% BCL6 DNA Positive Tissue`                 &lt;dbl&gt; 65.22893, 60.87633, 66.71…\n$ `% BCL6 BKGD Positive Tissue`                &lt;dbl&gt; 4.753322, 6.197680, 3.306…\n$ `BCL-6 Average Positive Optical Density`     &lt;dbl&gt; 0.336849, 0.315995, 0.320…\n$ `BCL6 DNA Average Positive Optical Density`  &lt;dbl&gt; 0.414238, 0.357134, 0.481…\n$ `BCL6 BKGD Average Positive Optical Density` &lt;dbl&gt; 0.269646, 0.281178, 0.265…\n$ `% BCL6 Negative Tissue`                     &lt;dbl&gt; 24.93337, 31.28863, 24.94…\n\n\n\n#data = data |&gt; mutate(Section = as.numeric(Section))\n#data = data |&gt; mutate(Section = round(Section, 1))"
  },
  {
    "objectID": "projects/CopyOfproject_title.knit.html#clean-up-the-data",
    "href": "projects/CopyOfproject_title.knit.html#clean-up-the-data",
    "title": "IHC Data",
    "section": "Clean up the data",
    "text": "Clean up the data\n\nChange the class of the section column\n\ndata = data |&gt;\n  mutate(Section = ifelse(\n    grepl(\"^\\\\d+\\\\.?\\\\d*$\", Section),               # Checks if purely numeric (integer or decimal)\n    as.character(round(as.numeric(Section), 1)),    # Round and convert back to character\n    Section                                         # Keep original for non-numeric entries\n  ))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Section = ifelse(...)`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\n\n\n\nChange the column names\n\ncolnames(data)[3] = \"age_cat\"\ncolnames(data)[4] = \"section\"\ncolnames(data)[5] = \"all_positive\"\ncolnames(data)[6] = \"follicles\"\ncolnames(data)[7] = \"cd21_bcl6_positive\"\ncolnames(data)[8] = \"cd19_bcl6_positive\"\ncolnames(data)[9] = \"only_cd21_positive\"\ncolnames(data)[10] = \"only_cd19_positive\"\ncolnames(data)[11] = \"only_bcl6_positive\"\ncolnames(data)[12] = \"total_cd21_positive\"\ncolnames(data)[13] = \"total_cd19_positive\"\ncolnames(data)[14]\n\n[1] \"CD19 Tissue Area Analyzed (μm²)\"\n\n\n\ndata |&gt; filter(!is.na(`CD19 Area (μm²)`)) |&gt;\n  group_by(age_cat) |&gt;\n  mutate(age_cat = factor(age_cat, levels = c(\"Infant\", \"Toddler\", \"Pre-pubertal\", \"Peri-pubertal\"))) |&gt;\n  ggplot(aes(x = age_cat, y = `CD19 Area (μm²)`, fill = age_cat)) +\n  geom_boxplot(width = 0.5) +\n  geom_jitter(position = position_jitter(width = 0.2), alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal() +\n  labs(\n    title = \"CD19 positive area in different age groups\",\n    x = \"Age categories\",\n    y = \"CD19 area (μm²)\"\n  )\n\n\n\n\n\n\n\n\n\ndata |&gt; filter(!is.na(`CD21 Area (μm²)`)) |&gt;\n  group_by(age_cat) |&gt;\n  mutate(age_cat = factor(age_cat, levels = c(\"Infant\", \"Toddler\", \"Pre-pubertal\", \"Peri-pubertal\"))) |&gt;\n  ggplot(aes(x = age_cat, y = `CD21 Area (μm²)`, fill = age_cat)) +\n  geom_boxplot(width = 0.5) +\n  geom_jitter(position = position_jitter(width = 0.2), alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal() +\n  labs(\n    title = \"CD21 positive area in different age groups\",\n    x = \"Age categories\",\n    y = \"CD21 area (μm²)\"\n  )"
  }
]